name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: trunk

      - name: Build (trunk)
        working-directory: './cofd/app/'
        run: |
          trunk build --release --public-url /cofd-pc-rs

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './cofd/app/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  build:
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            path: target/release/cofd-pc
          - os: windows-latest
            path: target\release\cofd-pc.exe
    name: Build ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features

      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.config.os }}-bin
          path: ${{ matrix.config.path }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: artifacts/*-bin/*
